-- Custom UILibrary Module

local CustomUILibrary = {}

-- Create the window function
function CustomUILibrary.CreateWindow(options)
    local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    
    -- Create the window frame
    local window = Instance.new("Frame")
    window.Size = UDim2.new(0, 500, 0, 400)
    window.Position = UDim2.new(0.5, -250, 0.5, -200)
    window.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    window.Active = true
    window.Draggable = true
    window.Visible = false  -- Hide initially for intro animation
    window.Parent = playerGui
    
    -- Add title to the window
    local title = Instance.new("TextLabel")
    title.Text = options.Name or "Window"
    title.Size = UDim2.new(1, 0, 0, 40)
    title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 18
    title.Parent = window
    
    -- Create close button
    local closeButton = Instance.new("TextButton")
    closeButton.Text = "X"
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -40, 0, 5)
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Parent = window
    closeButton.MouseButton1Click:Connect(function()
        window:Destroy()  -- Close the window
        if options.CloseCallback then
            options.CloseCallback()
        end
    end)
    
    -- Intro text display if enabled
    if options.IntroEnabled then
        local introText = Instance.new("TextLabel")
        introText.Text = options.IntroText or "Welcome!"
        introText.Size = UDim2.new(1, 0, 0, 50)
        introText.Position = UDim2.new(0, 0, 0.5, -25)
        introText.TextColor3 = Color3.fromRGB(255, 255, 255)
        introText.BackgroundTransparency = 1
        introText.Parent = playerGui
        
        -- Animate the intro text
        local function animateIntroText(text)
            local i = 1
            while i <= #text do
                introText.Text = text:sub(1, i)
                i = i + 1
                wait(0.05)
            end
        end

        animateIntroText(options.IntroText or "Welcome to Eclipse UI")

        wait(5)  -- Show intro text for 5 seconds
        introText:Destroy()
        window.Visible = true  -- Show the window after intro
    else
        window.Visible = true
    end

    return window
end

-- Create tab function
function CustomUILibrary.CreateTab(options, window)
    local tab = Instance.new("Frame")
    tab.Size = UDim2.new(0.25, 0, 1, -50)  -- Left column tab
    tab.Position = UDim2.new(0, 0, 0, 50)
    tab.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    tab.Parent = window
    
    -- Add tab name
    local tabName = Instance.new("TextLabel")
    tabName.Text = options.Name
    tabName.Size = UDim2.new(1, 0, 0, 50)
    tabName.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tabName.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabName.TextSize = 18
    tabName.Parent = tab
    
    -- Add the tab icon if provided
    if options.Icon then
        local icon = Instance.new("ImageLabel")
        icon.Image = options.Icon
        icon.Size = UDim2.new(0, 30, 0, 30)
        icon.Position = UDim2.new(0, 10, 0, 10)
        icon.Parent = tab
    end

    -- Create a button inside the tab
    local tabButton = Instance.new("TextButton")
    tabButton.Text = "Sample Button"
    tabButton.Size = UDim2.new(1, -20, 0, 40)
    tabButton.Position = UDim2.new(0, 10, 0, 100)
    tabButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.TextSize = 16
    tabButton.Parent = tab
    tabButton.MouseButton1Click:Connect(function()
        print("Button clicked!")
        if options.ButtonCallback then
            options.ButtonCallback()
        end
    end)

    -- Create a toggle button inside the tab
    local toggleButton = Instance.new("TextButton")
    toggleButton.Text = "Enable Feature"
    toggleButton.Size = UDim2.new(1, -20, 0, 40)
    toggleButton.Position = UDim2.new(0, 10, 0, 150)
    toggleButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.TextSize = 16
    toggleButton.Parent = tab
    toggleButton.MouseButton1Click:Connect(function()
        print("Toggle button clicked!")
        if options.ToggleCallback then
            options.ToggleCallback()
        end
    end)

    return tab
end

return CustomUILibrary
