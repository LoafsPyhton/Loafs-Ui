local CustomUILibrary = {}

-- Function to create the UI with tabs on the left side
function CustomUILibrary.createUI(parent)
    -- Create the main frame
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 500, 0, 400)
    frame.Position = UDim2.new(0.5, -250, 0.5, -200)
    frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    frame.Parent = parent
    
    -- Add the close button
    local closeButton = Instance.new("TextButton")
    closeButton.Text = "X"
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -30, 0, 0)
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Parent = frame
    closeButton.MouseButton1Click:Connect(function()
        frame.Visible = false -- Hide the UI when clicked
    end)

    -- Create the sidebar for tabs (on the left side)
    local sidebar = Instance.new("Frame")
    sidebar.Size = UDim2.new(0, 150, 1, 0)
    sidebar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    sidebar.Position = UDim2.new(0, 0, 0, 0)
    sidebar.Parent = frame

    -- Create the container for the content area
    local contentFrame = Instance.new("Frame")
    contentFrame.Size = UDim2.new(1, -150, 1, 0)
    contentFrame.Position = UDim2.new(0, 150, 0, 0)
    contentFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    contentFrame.Parent = frame

    -- Table to hold the buttons and sections
    local tabButtons = {}
    local tabFrames = {}

    -- Function to create a tab button
    function CustomUILibrary.createTabButton(tabName, position)
        local tabButton = Instance.new("TextButton")
        tabButton.Text = tabName
        tabButton.Size = UDim2.new(1, 0, 0, 50)
        tabButton.Position = UDim2.new(0, 0, 0, position * 50)
        tabButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        tabButton.Parent = sidebar
        table.insert(tabButtons, tabButton)

        return tabButton
    end

    -- Function to create a section frame (to show when a tab is clicked)
    function CustomUILibrary.createSection(tabIndex, sectionName)
        local sectionFrame = Instance.new("Frame")
        sectionFrame.Size = UDim2.new(1, 0, 1, 0)
        sectionFrame.Position = UDim2.new(0, 0, 0, 0)
        sectionFrame.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        sectionFrame.Visible = false
        sectionFrame.Parent = contentFrame

        -- Label for the section title
        local sectionLabel = Instance.new("TextLabel")
        sectionLabel.Text = sectionName
        sectionLabel.Size = UDim2.new(1, 0, 0, 50)
        sectionLabel.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
        sectionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        sectionLabel.Parent = sectionFrame

        -- Add the section to the table
        table.insert(tabFrames, sectionFrame)
    end

    -- Function to add a button inside the section
    function CustomUILibrary.createButton(section, buttonText, callback)
        local button = Instance.new("TextButton")
        button.Text = buttonText
        button.Size = UDim2.new(0, 200, 0, 40)
        button.Position = UDim2.new(0, 10, 0, #section:GetChildren() * 50 + 60)
        button.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Parent = section

        button.MouseButton1Click:Connect(callback)
    end

    -- Function to switch between sections when tabs are clicked
    function CustomUILibrary.switchTab(tabIndex)
        for i, section in ipairs(tabFrames) do
            section.Visible = (i == tabIndex)
        end
    end

    -- Return the functions for external use
    return {
        createTabButton = CustomUILibrary.createTabButton,
        createSection = CustomUILibrary.createSection,
        createButton = CustomUILibrary.createButton,
        switchTab = CustomUILibrary.switchTab
    }
end

return CustomUILibrary
